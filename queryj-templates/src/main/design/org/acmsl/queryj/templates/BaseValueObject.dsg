- Implement a new template BaseValueObject.stg based on QueryJ 2.x, in folder org/acmsl/queryj/templates;
- Import "queryj.stg";
- Define template source(C):
  - Add comment: Defines the rules to generate value object interfaces.;
  - Add comment: @param C the context.;
  - Call template sourceImpl:
  - Pass table: C.table;
  - Pass C: C;
- Define template sourceImpl(table; C):
  - Add comment: Defines the rules to generate value object interfaces.;
  - Add comment: @param table the table.;
  - Add comment: @param C the context.;
  - If C.header, Then Print:
    - C.header;
    - Else:
      - Call java_header:
        - Pass year: C.currentYear;
        - Pass description: an array of:
          - Call description:
            - Pass table: table;
        - Pass timestamp: C.timestamp;
  - If C.generation_timestamps_enabled, Then Print:
     - // Generated by QueryJ using org/acmsl/queryj/templates/BaseValueObject.stg at <C.timestamp>
    Else:
     - // Generated by QueryJ using org/acmsl/queryj/templates/BaseValueObject.stg
  - Call package_declaration:
    - Pass p: C.package;
  - Call checkers_import;
  - Import JDK classes;
  - Import javax classes;
  - Import Apache Commons Logging classes;
  - Call class:
    - Pass table: table;
    - Pass C: C;
- Define template description(table):
  - Add comment: Generates a description for the generated file.;
  - Add comment: @param table the table.
  - Print:
    <if(table.comment)><table.comment><else>ValueObject for <table.name> information.<endif>
- Define template class(table, C):
 - Add comment: Generates the class body.
 - Add comment: @param table the table.
 - Add comment: @param C the context.
 - Call classImpl:
   - Pass table: table;
   - Pass repository: C.repository;
   - Pass C: C;
- Define template classImpl(table, repository, C):
  - Add comment: Generates the class body.;
  - Add comment: @param table the table.;
  - Add comment: @param repository the table repository name.;
  - Add comment: @param C the context.;
  - Print a Javadoc class comment:
    - Call description:
      - Pass tableName: table.name;
    - Call class_common_javadoc:
      - Pass template: "org/acmsl/queryj/templates/BaseValueObject.stg";
      - Pass generation_timestamps_allowed: C.generation_timestamps_allowed;
      - Pass timestamp: C.timestamp;
  - Declare a interface called <table.name.voName>;
  - For each attribute, call getters template;
- Define template getters(attribute):
  - Add comment: Generates the getter definition for a given attribute.;
  - Print:
  <if(!attr.primitive)><if(attr.nullable)>@Nullable<else>@NotNull<endif><endif>
  <attr.type> get<attr.name.capitalized>();
