//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: BaseDAOFactory.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the rules to generate DAOFactory interfaces.
//
group BaseDAOFactory;

import "queryj.stg"

source(C) ::= <<
<!
  Generates a DAOFactory database implementation source file.
!>
<sourceImpl(table=C.table, C=C)>
>>

sourceImpl(table, C) ::= <<
<!
  Generates a DAOFactory database implementation source file.
  @param table the table.
  @param C the context.
!>
/*
<if(C.header)>
<C.header>
<else>
<java_header(
  description=
  [
    description(tableName=table.name)
  ],
  template="org/acmsl/queryj/dao/BaseDAOFactory.stg",
  C=C)><endif>
 */
<package_declaration(p=C.package)>

/*
 * Importing <C.repository.capitalized> classes.
 */
import <C.project_package>.dao.<table.name.voName>DAO;

<nullable_import(C=C)>
<interface(table=table, C=C)>
>>

description(tableName) ::= <<
<!
  Generates a description for the generated file.
  @param tableName the table name.
!>
Is responsible of creating {@link <tableName.voName>DAO} instances.
>>

interface(table, C) ::= <<
<!
 Generates the interface body.
 @param table the table.
 @param C the context.
!>
<interfaceImpl(table=table, repository=C.repository, C=C)>
>>

interfaceImpl(table, repository, C) ::= <<
<!
 Generates the interface body.
 @param table the table.
 @param repository the table repository name.
 @param C the context.
!>
/**
 * <description(tableName=table.name)>
<class_common_javadoc(template="org/acmsl/queryj/dao/BaseDAOFactory.stg", C=C)>
 */
public interface <table.name.voName>DAOFactory
{
    /**
     * Creates a <table.name>-specific DAO implementation.
     * @return such implementation.
     */
    <nullable(C=C)>
    <table.name.voName>DAO createDAO();
}
>>