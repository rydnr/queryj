<?xml version="1.0"?>

<!DOCTYPE sql-list
[
  <!ELEMENT sql-list (sql+,parameter-list,result-list,property-list)>
  <!ELEMENT sql (value,parameter-ref,result-ref?)>
  <!ATTLIST sql
    id ID #IMPLIED
    dao CDATA #REQUIRED
    name CDATA #REQUIRED
    type (select | insert | update | delete | select-for-update) #REQUIRED
    implementation (mysql | oracle | postgres | odbc | all-jdbc | mock | xml | all) #REQUIRED>

  <!ELEMENT value (#PCDATA)>
  <!ELEMENT parameter-ref EMPTY>
  <!ATTLIST parameter-ref
    id IDREF #REQUIRED>
  <!ELEMENT result-ref EMPTY>
  <!ATTLIST result-ref
    id IDREF #REQUIRED>
  <!ELEMENT parameter-list (parameter)*>
  <!ELEMENT parameter EMPTY>
  <!ATTLIST parameter
    id ID #REQUIRED
    index CDATA #REQUIRED
    type  CDATA #REQUIRED
    name  CDATA #REQUIRED>
  <!ELEMENT result-list (result)*>
  <!ELEMENT result (property-ref)+>
  <!ATTLIST result
    id ID #REQUIRED
    class CDATA #IMPLIED
    matches (single | multiple) #REQUIRED>
  <!ELEMENT property-ref EMPTY>
  <!ATTLIST property-ref
    id IDREF #REQUIRED>
  <!ELEMENT property-list (property)*>
  <!ELEMENT property EMPTY>
  <!ATTLIST property
    id ID #REQUIRED
    column_name CDATA #IMPLIED
    index CDATA #IMPLIED
    name CDATA #IMPLIED
    type CDATA #REQUIRED>
]>

<sql-list>
  <sql
    id="find-customer-by-customer-id-result"
    dao="customer"
    name="find-customer-by-customer-id"
    type="select"
    implementation="all">
    <value>select * from customers where customer_id = ?</value>
    <parameter-ref id="long-parameter-1"/>
    <result-ref id="find-customer-by-customer-id.result"/>
  </sql>
  <sql
    name="find-customer-by-person-last-name"
    dao="customer"
    implementation="all"
    type="select">
    <value>select c.customer_id, p.name from customers c, people p where p.last_name like ?</value>
    <parameter-ref id="long-parameter-1"/>
    <result-ref id="find-customer-by-person-last-name.result"/>
  </sql>
  <sql
    name="insert-test"
    dao="customer"
    implementation="all"
    type="insert">
    <value>insert into customers (customer_id, name) values (?, "test")</value>
    <parameter-ref id="long-parameter-1"/>
  </sql>
  <sql
    id="find-customer-for-update"
    dao="customer"
    name="find-customer-for-update"
    type="select-for-update"
    implementation="all">
    <value>select * from customers where customer_id = ?</value>
    <parameter-ref id="long-parameter-1"/>
    <result-ref id="find-customer-for-update.result"/>
  </sql>

  <!-- SQL parameter metadata -->
  <parameter-list>
    <parameter
      id="long-parameter-1"
      index="1"
      type="long"
      name="id"/>
  </parameter-list>

  <!-- Result metadata -->
  <result-list>
    <result
      id="find-customer-by-customer-id.result"
      matches="single">
      <property-ref
        id="find-customer-by-customer-id.customer_id.property"/>
      <property-ref
        id="find-customer-by-customer-id.name.property"/>
    </result>
    <result
      id="find-customer-by-person-last-name.result"
      class="com.foo.bar.dao.CustomerBean"
      matches="multiple">
      <property-ref
        id="find-customer-by-person.customer_id.property"/>
      <property-ref
        id="find-customer-by-person.personName.property"/>
    </result>
    <result
      id="find-customer-for-update.result"
      matches="single">
      <property-ref
        id="find-customer-for-update.customer_id.property"/>
      <property-ref
        id="find-customer-for-update.name.property"/>
    </result>
  </result-list>

  <!-- Result property metadata -->
  <property-list>
    <property
      id="find-customer-by-customer-id.customer_id.property"
      column_name="customer_id"
      type="long"/>
    <property
      id="find-customer-by-customer-id.name.property"
      column_name="name" type="String"/>
    <property
      id="find-customer-by-person.customer_id.property"
      column_name="c.customer_id"
      name="customerId"
      type="long"/>
    <property
      id="find-customer-by-person.personName.property"
      column_name="p.name"
      name="personName"
      type="String"/>
    <property
      id="find-customer-for-update.customer_id.property"
      column_name="customer_id"
      type="long"/>
    <property
      id="find-customer-for-update.name.property"
      column_name="name" type="String"/>
  </property-list>

</sql-list>
