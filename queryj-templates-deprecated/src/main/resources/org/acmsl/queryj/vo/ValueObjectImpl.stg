//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: ValueObjectImpl.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the rules to generate value object
//              implementations.
//
//
group ValueObjectImpl;

source() ::= <<
<!
  Generates a value object.
!>
<if(header)>
<header>
<else>
<java_header(
  year=current_year,
  description=
  [
    first_line_description(tableName=table.name)
  ],
  timestamp=timestamp)>
<endif>
<if(generation_timestamps_enabled)>
// Generated by QueryJ using org/acmsl/queryj/vo/ValueObjectImpl.stg at <timestamp>
<endif>

<package_declaration(package=package)>

<checkers_import()>
<if(column_type_imports)>
/*
 * Importing some JDK classes.
 */
<column_type_imports:import(type=it)>
<endif>

<class(table=table)>
>>

first_line_description(tableName) ::= <<
<!
  Generates the first line of the generated file description.
  @param result the custom result.
!>
Value object implementation for \<i\><tableName>\</i\>.
>>

class(table) ::= <<
<!
 Generates the class body.
 @param table the table.
!>
<class_impl(table=table, parent=table.parentTable)>
>>

class_impl(table, parent) ::= <<
<!
 Generates the class body.
 @param table the table.
 @param parent the parent table.
!>
/**
 * <[
      first_line_description(tableName=table.name)
    ]:{line |<line>}; separator="\n * ">
<class_common_javadoc()>
 */
<class_annotations()>
public class <table.voName>ValueObject
    extends  Abstract<table.voName>ValueObject
{
    private static final long serialVersionUID = <serialVersionUID>L;

    /**
     * Creates a {@link <table.voName>ValueObject} instance.
<if(parent)>
     <table.allParentAndNonParentAttributes:attribute_javadoc(attribute=it); separator="\n">
<else>
     <table.attributes:attribute_javadoc(attribute=it); separator="\n">
<endif>

     */
    public <table.voName>ValueObject(
<if(parent)>
        <table.allParentAndNonParentAttributes:attribute_method_declaration(attribute=it);
          separator=",\n">)
<else>
        <table.attributes:attribute_method_declaration(attribute=it);
          separator=",\n">)
<endif>

    {
        super(
<if(parent)>
            <table.allParentAndNonParentAttributes:{<it.nameUncapitalized>};
              separator=",\n">);
<else>
            <table.attributes:{<it.nameUncapitalized>};
              separator=",\n">);
<endif>

    }
}
>>

attribute_javadoc(attribute) ::= <<
<!
 Writes the Javadoc for given attribute.
 @param attribute the attribute.
!>
<if(attribute.comment)>
* @param <attribute.nameUncapitalized> <attribute.comment>
<else>
* @param <attribute.nameUncapitalized> the \<i\><attribute.nameCapitalized>\</i> value.
<endif>

>>

attribute_method_declaration(attribute) ::= <<
<!
 Writes the method declaration for given attribute.
 @param attribute the attribute.
!>
<type_checker(attribute=attribute)>final <attribute.javaType> <attribute.nameUncapitalized>
>>
