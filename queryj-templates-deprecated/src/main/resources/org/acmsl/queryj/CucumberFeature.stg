//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: CucumberFeature.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Cucumber tests for table templates.
//
group ConfigurationProperties;

source() ::= <<
<!
 Generates configuration properties.
!>
<if(header)>
<header.lines:{# <it>}; separator="\n">
<else>
<header(
  year=current_year,
  description=
  [
    "Internal for QueryJ: Cucumber tests for table templates."
  ],
  timestamp=timestamp)>
<endif>
<if(generation_timestamps_enabled)>
# Generated by QueryJ using org/acmsl/queryj/CucumberFeature.stg at <timestamp>
<else>
# Generated by QueryJ using org/acmsl/queryj/CucumberFeature.stg
<endif>

Feature: <repository> table templates

  Scenario Outline: <repository> table templates compile.

    Given the following tables:
    | table | parent table | decorated | relationship | static |
    <tables:table_def(table=it); separator="\n">


    And the following columns:
    | table | column | type | pk | allows null | readonly | sequence  | keyword | boolean | length | precision |
    <tables:columns(table=it); separator="\n">

    And the following foreign keys:
    | source table | source columns | target table | allows null |
    <tables:foreign_keys(table=it); separator="\n">

    When I generate with per-table \<template\>.stg for <engine_name> <engine_version>

    Then the generated per-table \<output\> file compiles successfully

    Examples:
      | template           | output                            |
      | DAO                | OracleUserDAO.java                |
      | BaseDAO            | UserDAO.java                      |
      | DAOFactory         | UserDAOFactory.java               |
      | PkStatementSetter  | OracleUserPkStatementSetter.java  |
      | ResultSetExtractor | OracleUserResultSetExtractor.java |
      | BaseValueObject    | AbstractUserValueObject.java      |
      | ValueObject        | UserValueObject.java              |
      | ValueObjectFactory | UserValueObjectFactory.java       |
      | ValueObjectImpl    | UserValueObjectImpl.java          |
>>

table_def(table) ::= <<
| <table.name> | <table.parent> | <table.decorated> | <table.relationship> | <table.static> |
>>

columns(table) ::= <<
<table.primaryKey:column_def(table=table, attr=it); separator="\n">
<table.nonPrimaryKeyAttributes:column_def(table=table, attr=it); separator="\n">
>>

column_def(table, attr) ::= <<
| <table.name> | <attr.name> | <attr.type> | <attr.nullable> | <attr.readOnly> | <attr.sequence> | <attr.keyword> | <attr.boolean> | <attr.typeLength> | <attr.typePrecision> |
>>

foreign_keys(table) ::= <<
<table.foreingKeys:foreign_key_def(table=table, foreign_key=it); separator="\n">
>>

foreign_key_def(table, foreignKey) ::= <<
| <foreingKey.sourceTableName> | <foreignKey.attributes:{ attr | <attr.name> }; separator=" | "> | <foreignKey.targetTableName> | <foreignKey.nullable> |
>>
